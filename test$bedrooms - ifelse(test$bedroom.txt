test$bedrooms <- ifelse(test$bedrooms == 0, test$rooms, test$bedrooms)
mediana_bedrooms <- median(test$bedrooms, na.rm = TRUE)
test$bedrooms <- ifelse(is.na(test$bedrooms), mediana_bedrooms, test$bedrooms)


test_sf$distancia_centros_comerciales <- dist_min_centros_comerciales
test_sf$distancia_supermercados <- dist_min_supermercados
test_sf$distancia_transmilenio <- dist_min_transmilenio
test_sf$distancia_universidades <- dist_min_universidades
test_sf$distancia_restaurantes_bares_chapinero <- dist_min_restaurantes_bares_chapinero


train <- cbind(train, train_sf[c("distancia_parque", "distancia_transmilenio", "distancia_supermercados", "distancia_centros_comerciales", "distancia_universidades", "distancia_restaurantes_bares")])


# Definir la ubicación de interés (Chapinero, Bogotá, Colombia)
ubicacion <- "Chapinero, Bogotá, Colombia"

# Obtener los límites geográficos (BBOX) de la ubicación de Chapinero
bbox_chapinero <- getbb(ubicacion)

# Definir la búsqueda de supermercados en Chapinero
supermercados_chapinero <- opq(bbox = bbox_chapinero) %>%
  add_osm_feature(key = "shop", value = "supermarket")

# Cambiar el formato para que sea un objeto sf (simple features)
supermercados_chapinero_sf <- osmdata_sf(supermercados_chapinero)

# De las features de supermercados, nos interesa su geometría y ubicación
supermercados_geometria <- supermercados_chapinero_sf$osm_points %>%
  select(osm_id, name)

# Calcular el centroide de cada supermercado para aproximar su ubicación como un solo punto
centroides_supermercados <- st_centroid(supermercados_geometria)

# Convertir los datos de 'test' a un objeto sf y especificar el sistema de coordenadas
test_sf <- st_as_sf(test, coords = c("lon", "lat"), crs = 4326)

# Calcular las distancias para cada combinación inmueble - supermercado
distancias_supermercados <- st_distance(test_sf, centroides_supermercados)

# Encontrar la distancia mínima a un supermercado
dist_min_supermercados <- apply(distancias_supermercados, 1, min)

# Agregar la distancia mínima como una nueva columna en 'test_sf'
test_sf$distancia_supermercados <- dist_min_supermercados
# Visualizar el conjunto de datos 'test_sf' con la nueva variable
head(test_sf)